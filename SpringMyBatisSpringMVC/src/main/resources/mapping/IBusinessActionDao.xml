<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.quicktron.business.dao.IBusinessActionDao">

        <select id="queryActivePickTask" resultType="java.lang.Integer">
            SELECT count(1)
              from qt_bucket b,
                   qt_slot s,
                   qt_pick_task t
             where b.bucket_code = s.bucket_code
               and b.bucket_code = t.bucket_code
               and s.slot_code = #{_slotCode,mode=IN,jdbcType=VARCHAR}
               and t.task_status >=0
               and t.task_status <![CDATA[ < ]]> 99
               limit 1;
        </select>

        <!-- 到站待拣货位 -->
        <select id="queryWaitPickLpn" resultType="com.quicktron.business.entities.WaitForPickVO">
           SELECT bb.point_name as "pointName",
                  bb.bucket_floor AS "bucketFloor",
                  bb.ws_code AS "wsCode"
            FROM(SELECT
                        @num := IF(@str = aa.point_name, @num + 1, 1) rownum,
                        aa.bucket_floor,
                        @str := aa.point_name point_name,
                        aa.ws_code
                    FROM(
                        SELECT
                            sd.point_code,
                            sd.point_name,
                            pk.ws_code,
                            concat( '第', s.bucket_floor, '层' ) bucket_floor -- u.user_code AS "updateBy"
                        FROM
                            qt_pick_task pk,
                            qt_bucket_task bk,
                            qt_bucket b,
                            qt_station_dtl sd,-- qt_station st,
                        -- qt_user u,
                            qt_slot s
                        WHERE
                            pk.bucket_code = #{_bucket,mode=IN,jdbcType=VARCHAR}
                            AND pk.bucket_code = bk.bucket_code
                            AND pk.bucket_code = b.bucket_code
                            AND pk.task_status = 1 -- 1表示已从拣货下发bucket task
                            AND bk.task_status = 99 -- DONE才推送给前端
                            AND pk.ws_code = sd.ws_code -- AND sd.ws_code = st.ws_code
                            AND bk.end_point = sd.point_code -- 目标是工作站点位
                            AND b.point_code = sd.point_code -- 货架在工作站点位上
                            AND pk.slot_code = s.slot_code -- AND cast( st.update_by AS UNSIGNED INT ) = u.id
                            ) aa,(SELECT @str := '', @num := 0) t1
                    ORDER BY aa.point_name, aa.bucket_floor
              )bb where bb.rownum = 1
        </select>

        <!-- 工作站下待拣货位 -->
        <select id="queryWaitPickByStat" resultType="com.quicktron.business.entities.WaitForPickVO">
            SELECT bb.point_name as "pointName",
                   bb.bucket_floor AS "bucketFloor",
                   bb.ws_code AS "wsCode"
             FROM(SELECT
                        @num := IF(@str = aa.point_name, @num + 1, 1) rownum,
                        aa.bucket_floor,
                        @str := aa.point_name point_name,
                        aa.ws_code
                  FROM(select sd.point_name,
                              pk.ws_code,
                              concat('第',s.bucket_floor,'层') bucket_floor
                        from qt_pick_task pk,
                             qt_bucket_task bk,
                             qt_bucket b,
                             qt_station_dtl sd,
                             qt_slot s
                       where pk.ws_code = #{_wsCode,mode=IN,jdbcType=VARCHAR}
                         and pk.bucket_code = bk.bucket_code
                         and pk.task_status = 1 -- 1表示已从拣货下发bucket task
                         and bk.task_status = 99 -- 99 已到站
                         and pk.ws_code = sd.ws_code
                         and bk.end_point = sd.point_code -- 目标是工作站点位
                         and pk.slot_code = s.slot_code
                         and pk.bucket_code = b.bucket_code
                         and sd.point_code = b.point_code -- 货架在工作站点位上
                         and not exists(select 1
                                         from qt_bucket_task dk
                                        where pk.bucket_code = dk.bucket_code
                                          and bk.task_status >= 0
                                          and bk.task_status <![CDATA[ < ]]> 99)
                      ) aa,(SELECT @str := '', @num := 0) t1
                  ORDER BY aa.point_name, aa.bucket_floor
               )bb where bb.rownum = 1
        </select>
<!--    -->
<!--    <select id="getInfo" statementType="CALLABLE" resultMap="infoResultMap" parameterType="java.util.HashMap">-->
<!--      {call net_procedure_request(#{select_type,mode=IN,jdbcType=VARCHAR},-->
<!--                                  #{client_ip,mode=IN,jdbcType=VARCHAR},-->
<!--                                  #{t_error,jdbcType=INTEGER,mode=OUT})}-->
<!--    </select>-->

<!--    <insert id="insertPickTask" parameterType="java.util.List">-->
<!--        INSERT INTO qt_pick_task(lpn,bucket_code,slot_code,task_status,ws_code,create_by,create_time,update_by,update_time)-->
<!--        VALUES-->
<!--        <foreach collection="_lpnList" item="item" index="index" separator=",">-->
<!--            (#{item.lpn},-->
<!--             #{item.bucketCode},-->
<!--             #{item.slotCode},-->
<!--             #{item.taskStatus},-->
<!--             #{item.wsCode},-->
<!--             #{item.createBy},-->
<!--             sysdate(),-->
<!--            #{item.updateBy},-->
<!--             sysdate())-->
<!--        </foreach>-->
<!--    </insert>-->
<!--        <select id="queryLpnSlotCnt" resultType="java.lang.Integer">-->
<!--            select count(1)-->
<!--              from qt_slot s,-->
<!--             where s.slot_code =#{_slotCode,jdbcType=VARCHAR}-->
<!--               and s.lpn = #{_lpn,jdbcType=VARCHAR}-->
<!--        </select>-->

        <!--上下架-->
        <select id="updateLpnSlotRelat" statementType="CALLABLE" resultType="com.quicktron.business.entities.ReportParamInVO">
          {call p_qt_lpn_slot_operate(#{_vo.lpn,mode=IN,jdbcType=VARCHAR},
                                      #{_vo.slotCode,mode=IN,jdbcType=VARCHAR},
                                      #{_vo.updateBy,mode=IN,jdbcType=VARCHAR},
                                      #{_vo.operateType,mode=IN,jdbcType=VARCHAR},
                                      #{_vo.returnMessage,mode=OUT,jdbcType=VARCHAR}
                                      )}
        </select>

        <select id="refreshTask" statementType="CALLABLE" resultType="com.quicktron.business.entities.ReportParamInVO">
          {call p_qt_update_bucket_task(#{_vo.id,mode=IN,jdbcType=INTEGER},
                                        #{_vo.bucketCode,mode=IN,jdbcType=VARCHAR},
                                        #{_vo.taskStatus,mode=IN,jdbcType=VARCHAR},
                                        #{_vo.returnMessage,mode=OUT,jdbcType=VARCHAR}
                                        )}
        </select>

       <select id="releaseBucket" statementType="CALLABLE" resultType="com.quicktron.business.entities.ReportParamInVO">
          {call p_qt_release_bucket(#{_vo.wsCode,mode=IN,jdbcType=VARCHAR},
                                    #{_vo.slotCode,mode=IN,jdbcType=VARCHAR},
									#{_vo.createBy,mode=IN,jdbcType=INTEGER},
									#{_vo.returnMessage,mode=OUT,jdbcType=VARCHAR})
									}
        </select>

       <select id="updateAutoScheduleFlag" statementType="CALLABLE" resultType="com.quicktron.business.entities.ReportParamInVO">
          {call p_qt_auto_schedule(#{_vo.wsCode,mode=IN,jdbcType=VARCHAR},
						           #{_vo.operateType,mode=IN,jdbcType=VARCHAR},
								   #{_vo.updateBy,mode=IN,jdbcType=VARCHAR},
								   #{_vo.returnMessage,mode=OUT,jdbcType=VARCHAR})
									}
        </select>

      <select id="submitPickTask" statementType="CALLABLE" resultType="com.quicktron.business.entities.ReportParamInVO">
          {call p_qt_insert_pick_task(#{_vo.lpn,mode=IN,jdbcType=VARCHAR},
                                      #{_vo.wsCode,mode=IN,jdbcType=VARCHAR},
									  #{_vo.createBy,mode=IN,jdbcType=VARCHAR},
									  #{_vo.returnMessage,mode=OUT,jdbcType=VARCHAR})
									  }
        </select>

</mapper>